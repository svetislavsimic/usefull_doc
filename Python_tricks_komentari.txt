			WITH izraz

Resurs mozemo da smatramo da je bilo sta cega ima u 
ogranicenim kolicinama. Npr hendleri za fajlove, 
mrezni soketi, brave za niti i 
glavni zadatak je da se oslobode nakon sto se 
upotrebe i nakon sto nam vise ne trebaju. Kontekst 
menadzment se bavi upravljanjem resursima
koji su medjusobno deljeni, tj ako aplikacije 
rade "u kontekstu". U pythonu imamo kljucnu rec WITH . 
Ona je fakticki skracenica za try -> finally tj:

f = open('hello.txt', 'w')
try:
	f.write('hello, world')
finally:
	f.close()

with open('hello.txt', 'w') as f:
	f.write('hello, world')
	
Kontekst menadzer je protokol (interfejs) koji objekat 
mora da ispostuje da bi mogao da bude upotrebljen sa 
with izrazom.
Svodi se na to da nasa klasa mora da implementira 
__enter__ i __exit__ metod.
********************************KEYWORD ARGUMENTS*******************************************************************************************************************
# In Python 3 you can use a bare "*" asterisk 
# in function parameter lists to force the
# caller to use keyword arguments for certain
# parameters:

>>> def f(a, b, *, c='x', d='y', e='z'):
...     return 'Hello'

# To pass the value for c, d, and e you 
# will need to explicitly pass it as 
# "key=value" named arguments:
>>> f(1, 2, 'p', 'q', 'v')
TypeError: 
"f() takes 2 positional arguments but 5 were given"

>>> f(1, 2, c='p', d='q',e='v')
'Hello'
******************************************************